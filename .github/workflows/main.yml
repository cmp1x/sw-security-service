# This is a basic workflow to help you get started with Actions
name: Build pipelines

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains first job called "build"
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore SW.SecurityService.sln
      - name: Build
        run: dotnet build SW.SecurityService.sln --configuration Release --no-restore
      - name: Test
        run: dotnet test SW.SecurityService.Core.Tests.csproj --no-restore --verbosity normal
        working-directory: SW.SecurityService.Core.Tests
        
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Copy repository contents via scp
      uses: appleboy/scp-action@master
      with: 
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: "."
        target: "/var/www/a5t.ru/api/SecurityService"
    
    - name: Build and restart
      uses: fifsky/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        user: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        args: "-tt -vvv"
        command: |
          cd /var/www/a5t.ru/api/SecurityService
          dotnet publish --configuration Release
          systemctl daemon-reload
          sudo systemctl restart kestrel-SecurityService.service
    